Object: ‹class Object {}›,
Function: ‹class Function {}›,
Array: ‹class Array {}›,
Number: ‹class Number {}›,
parseFloat: ‹ƒ () { [native code] }›,
parseInt: ‹ƒ () { [native code] }›,
Infinity: Infinity,
NaN: NaN,
undefined: undefined,
Boolean: ‹class Boolean {}›,
String: ‹class String {}›,
Symbol: ‹class Symbol {}›,
Date: ‹class Date {}›,
Promise: ‹class Promise {}›,
RegExp: ‹class RegExp {}›,
Error: ‹class Error {}›,
AggregateError: ‹class AggregateError extends Error {}›,
EvalError: ‹class EvalError extends Error {}›,
RangeError: ‹class RangeError extends Error {}›,
ReferenceError: ‹class ReferenceError extends Error {}›,
SyntaxError: ‹class SyntaxError extends Error {}›,
TypeError: ‹class TypeError extends Error {}›,
URIError: ‹class URIError extends Error {}›,
JSON: {
  parse: ‹ƒ () { [native code] }›,
  stringify: ‹ƒ () { [native code] }›
},
Math: {
  abs: ‹ƒ () { [native code] }›,
  acos: ‹ƒ () { [native code] }›,
  acosh: ‹ƒ () { [native code] }›,
  asin: ‹ƒ () { [native code] }›,
  asinh: ‹ƒ () { [native code] }›,
  atan: ‹ƒ () { [native code] }›,
  atanh: ‹ƒ () { [native code] }›,
  atan2: ‹ƒ () { [native code] }›,
  ceil: ‹ƒ () { [native code] }›,
  cbrt: ‹ƒ () { [native code] }›,
  expm1: ‹ƒ () { [native code] }›,
  clz32: ‹ƒ () { [native code] }›,
  cos: ‹ƒ () { [native code] }›,
  cosh: ‹ƒ () { [native code] }›,
  exp: ‹ƒ () { [native code] }›,
  floor: ‹ƒ () { [native code] }›,
  fround: ‹ƒ () { [native code] }›,
  hypot: ‹ƒ () { [native code] }›,
  imul: ‹ƒ () { [native code] }›,
  log: ‹ƒ () { [native code] }›,
  log1p: ‹ƒ () { [native code] }›,
  log2: ‹ƒ () { [native code] }›,
  log10: ‹ƒ () { [native code] }›,
  max: ‹ƒ () { [native code] }›,
  min: ‹ƒ () { [native code] }›,
  pow: ‹ƒ () { [native code] }›,
  random: ‹ƒ () { [native code] }›,
  round: ‹ƒ () { [native code] }›,
  sign: ‹ƒ () { [native code] }›,
  sin: ‹ƒ () { [native code] }›,
  sinh: ‹ƒ () { [native code] }›,
  sqrt: ‹ƒ () { [native code] }›,
  tan: ‹ƒ () { [native code] }›,
  tanh: ‹ƒ () { [native code] }›,
  trunc: ‹ƒ () { [native code] }›,
  E: undefined,
  LN10: undefined,
  LN2: undefined,
  LOG10E: undefined,
  LOG2E: undefined,
  PI: undefined,
  SQRT1_2: undefined,
  SQRT2: undefined
},
Intl: {
  getCanonicalLocales: ‹ƒ () { [native code] }›,
  supportedValuesOf: ‹ƒ () { [native code] }›,
  DateTimeFormat: ‹class DateTimeFormat {}›,
  NumberFormat: ‹class NumberFormat {}›,
  Collator: ‹class Collator {}›,
  PluralRules: ‹class PluralRules {}›,
  RelativeTimeFormat: ‹class RelativeTimeFormat {}›,
  ListFormat: ‹class ListFormat {}›,
  Locale: ‹class Locale {}›,
  DisplayNames: ‹class DisplayNames {}›,
  Segmenter: ‹class Segmenter {}›
},
ArrayBuffer: ‹class ArrayBuffer {}›,
Uint8Array: ‹class Uint8Array extends TypedArray {}›,
Int8Array: ‹class Int8Array extends TypedArray {}›,
Uint16Array: ‹class Uint16Array extends TypedArray {}›,
Int16Array: ‹class Int16Array extends TypedArray {}›,
Uint32Array: ‹class Uint32Array extends TypedArray {}›,
Int32Array: ‹class Int32Array extends TypedArray {}›,
Float32Array: ‹class Float32Array extends TypedArray {}›,
Float64Array: ‹class Float64Array extends TypedArray {}›,
Uint8ClampedArray: ‹class Uint8ClampedArray extends TypedArray {}›,
BigUint64Array: ‹class BigUint64Array extends TypedArray {}›,
BigInt64Array: ‹class BigInt64Array extends TypedArray {}›,
DataView: ‹class DataView {}›,
Map: ‹class Map {}›,
BigInt: ‹class BigInt {}›,
Set: ‹class Set {}›,
WeakMap: ‹class WeakMap {}›,
WeakSet: ‹class WeakSet {}›,
Proxy: ‹ƒ () { [native code] }›,
Reflect: {
  defineProperty: ‹ƒ () { [native code] }›,
  deleteProperty: ‹ƒ () { [native code] }›,
  apply: ‹ƒ () { [native code] }›,
  construct: ‹ƒ () { [native code] }›,
  get: ‹ƒ () { [native code] }›,
  getOwnPropertyDescriptor: ‹ƒ () { [native code] }›,
  getPrototypeOf: ‹ƒ () { [native code] }›,
  has: ‹ƒ () { [native code] }›,
  isExtensible: ‹ƒ () { [native code] }›,
  ownKeys: ‹ƒ () { [native code] }›,
  preventExtensions: ‹ƒ () { [native code] }›,
  set: ‹ƒ () { [native code] }›,
  setPrototypeOf: ‹ƒ () { [native code] }›
},
FinalizationRegistry: ‹class FinalizationRegistry {}›,
WeakRef: ‹class WeakRef {}›,
decodeURI: ‹ƒ () { [native code] }›,
decodeURIComponent: ‹ƒ () { [native code] }›,
encodeURI: ‹ƒ () { [native code] }›,
encodeURIComponent: ‹ƒ () { [native code] }›,
escape: ‹ƒ () { [native code] }›,
unescape: ‹ƒ () { [native code] }›,
eval: ‹ƒ () { [native code] }›,
isFinite: ‹ƒ () { [native code] }›,
isNaN: ‹ƒ () { [native code] }›,
console: {
  log: ‹ƒ () { [native code] }›,
  warn: ‹ƒ () { [native code] }›,
  dir: ‹ƒ () { [native code] }›,
  time: ‹ƒ () { [native code] }›,
  timeEnd: ‹ƒ () { [native code] }›,
  timeLog: ‹ƒ () { [native code] }›,
  trace: ‹ƒ () { [native code] }›,
  assert: ‹ƒ () { [native code] }›,
  clear: ‹ƒ () { [native code] }›,
  count: ‹ƒ () { [native code] }›,
  countReset: ‹ƒ () { [native code] }›,
  group: ‹ƒ () { [native code] }›,
  groupEnd: ‹ƒ () { [native code] }›,
  table: ‹ƒ () { [native code] }›,
  debug: ‹ƒ () { [native code] }›,
  info: ‹ƒ () { [native code] }›,
  dirxml: ‹ƒ () { [native code] }›,
  error: ‹ƒ () { [native code] }›,
  groupCollapsed: ‹ƒ () { [native code] }›,
  Console: ‹class Console {}›,
  profile: ‹ƒ () { [native code] }›,
  profileEnd: ‹ƒ () { [native code] }›,
  timeStamp: ‹ƒ () { [native code] }›,
  context: ‹ƒ () { [native code] }›,
  createTask: ‹ƒ () { [native code] }›,
  _stdout: {
    _writableState: {
      objectMode: false,
      highWaterMark: undefined,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: "utf8",
      length: undefined,
      writing: false,
      corked: undefined,
      sync: true,
      bufferProcessing: false,
      onwrite: ‹ƒ () { [native code] }›,
      writecb: null,
      writelen: undefined,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: undefined,
      allBuffers: true,
      allNoop: true,
      pendingcb: undefined,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    _events: {},
    _eventsCount: undefined,
    _maxListeners: undefined,
    fd: undefined,
    readable: false,
    autoClose: false,
    _type: "fs",
    _isStdio: true,
    destroySoon: ‹class destroySoon {}›,
    _destroy: ‹class dummyDestroy {}›
  },
  _stderr: {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: {
      objectMode: false,
      highWaterMark: undefined,
      buffer: {
        head: null,
        tail: null,
        length: undefined
      },
      length: undefined,
      pipes: [],
      flowing: null,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: "utf8",
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null
    },
    _events: {
      end: ‹class onReadableStreamEnd {}›
    },
    _eventsCount: undefined,
    _maxListeners: undefined,
    _writableState: {
      objectMode: false,
      highWaterMark: undefined,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: "utf8",
      length: undefined,
      writing: false,
      corked: undefined,
      sync: true,
      bufferProcessing: false,
      onwrite: ‹ƒ () { [native code] }›,
      writecb: null,
      writelen: undefined,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: undefined,
      allBuffers: true,
      allNoop: true,
      pendingcb: undefined,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: "",
    server: null,
    _server: null,
    columns: undefined,
    rows: undefined,
    _type: "tty",
    fd: undefined,
    _isStdio: true,
    destroySoon: ‹class destroy {}›
  },
  _stdoutErrorHandler: ‹ƒ (err) => { // This conditional evaluates to true if and only if there was an error // that was not already emitted (which happens when the _write callback // is invoked asynchronously). const stream = streamSymbol === kUseStdout ? instance._stdout : instance._stderr; if (err !== null && !stream._writableState.errorEmitted) { // If there was an error, it will be emitted on `stream` as // an `error` event. Adding a `once` listener will keep that error // from becoming an uncaught exception, but since the handler is // removed after the event, non-console.* writes won't be affected. // we are only adding noop if there is no one else listening for 'error' if (stream.listenerCount('error') === 0) { stream.once('error', noop); } } }›,
  _stderrErrorHandler: ‹ƒ (err) => { // This conditional evaluates to true if and only if there was an error // that was not already emitted (which happens when the _write callback // is invoked asynchronously). const stream = streamSymbol === kUseStdout ? instance._stdout : instance._stderr; if (err !== null && !stream._writableState.errorEmitted) { // If there was an error, it will be emitted on `stream` as // an `error` event. Adding a `once` listener will keep that error // from becoming an uncaught exception, but since the handler is // removed after the event, non-console.* writes won't be affected. // we are only adding noop if there is no one else listening for 'error' if (stream.listenerCount('error') === 0) { stream.once('error', noop); } } }›,
  _ignoreErrors: true,
  _times: {}
},
process: {
  version: "v20.6.1",
  versions: {
    node: "20.6.1",
    acorn: "8.10.0",
    ada: "2.6.0",
    ares: "1.19.1",
    base64: "0.5.0",
    brotli: "1.0.9",
    cjs_module_lexer: "1.2.2",
    cldr: "43.1",
    icu: "73.2",
    llhttp: "8.1.1",
    modules: "115",
    napi: "9",
    nghttp2: "1.55.1",
    nghttp3: "0.7.0",
    ngtcp2: "0.8.1",
    openssl: "3.0.10+quic",
    simdutf: "3.2.17",
    tz: "2023c",
    undici: "5.23.0",
    unicode: "15.0",
    uv: "1.46.0",
    uvwasi: "0.0.18",
    v8: "11.3.244.8-node.14",
    zlib: "1.2.13.1-motley"
  },
  arch: "x64",
  platform: "darwin",
  release: {
    name: "node",
    sourceUrl: "https://nodejs.org/download/release/v20.6.1/node-v20.6.1.tar.gz",
    headersUrl: "https://nodejs.org/download/release/v20.6.1/node-v20.6.1-headers.tar.gz"
  },
  _rawDebug: ‹class _rawDebug {}›,
  moduleLoadList: [
    "Internal Binding builtins",
    "Internal Binding errors",
    "Internal Binding util",
    "NativeModule internal/errors",
    "Internal Binding config",
    "Internal Binding timers",
    "Internal Binding async_wrap",
    "Internal Binding task_queue",
    "Internal Binding symbols",
    "NativeModule internal/async_hooks",
    "Internal Binding constants",
    "Internal Binding types",
    "Internal Binding options",
    "NativeModule internal/options",
    "NativeModule internal/util",
    "NativeModule internal/util/types",
    "NativeModule internal/validators",
    "NativeModule internal/linkedlist",
    "NativeModule internal/priority_queue",
    "NativeModule internal/assert",
    "Internal Binding icu",
    "NativeModule internal/util/inspect",
    "NativeModule internal/util/debuglog",
    "NativeModule internal/timers",
    "NativeModule events",
    "Internal Binding buffer",
    "Internal Binding string_decoder",
    "NativeModule internal/buffer",
    "NativeModule buffer",
    "Internal Binding messaging",
    "NativeModule internal/worker/js_transferable",
    "Internal Binding process_methods",
    "NativeModule internal/process/per_thread",
    "Internal Binding credentials",
    "NativeModule internal/process/promises",
    "NativeModule internal/fixed_queue",
    "NativeModule async_hooks",
    "NativeModule internal/process/task_queues",
    "NativeModule timers",
    "Internal Binding trace_events",
    "NativeModule internal/constants",
    "NativeModule path",
    "NativeModule internal/process/execution",
    "NativeModule internal/process/warning",
    "NativeModule internal/querystring",
    "NativeModule querystring",
    "Internal Binding url",
    "NativeModule internal/url",
    "NativeModule internal/source_map/source_map_cache",
    "NativeModule internal/console/constructor",
    "NativeModule internal/console/global",
    "Internal Binding permission",
    "NativeModule internal/process/permission",
    "NativeModule internal/util/inspector",
    "Internal Binding inspector",
    "NativeModule util",
    "NativeModule internal/webidl",
    "Internal Binding performance",
    "NativeModule internal/perf/utils",
    "NativeModule internal/event_target",
    "Internal Binding blob",
    "Internal Binding mksnapshot",
    "NativeModule internal/v8/startup_snapshot",
    "NativeModule internal/process/signal",
    "Internal Binding fs",
    "Internal Binding encoding_binding",
    "NativeModule internal/encoding",
    "NativeModule internal/webstreams/util",
    "NativeModule internal/webstreams/queuingstrategies",
    "NativeModule internal/blob",
    "NativeModule internal/fs/utils",
    "NativeModule internal/fs/read/utf8",
    "NativeModule fs",
    "NativeModule internal/idna",
    "NativeModule url",
    "Internal Binding contextify",
    "NativeModule internal/vm",
    "NativeModule internal/modules/helpers",
    "NativeModule internal/modules/package_json_reader",
    "Internal Binding module_wrap",
    "NativeModule internal/modules/cjs/loader",
    "NativeModule internal/process/pre_execution",
    "NativeModule internal/vm/module",
    "NativeModule internal/modules/esm/utils",
    "NativeModule internal/inspector_async_hook",
    "Internal Binding wasm_web_api",
    "Internal Binding worker",
    "NativeModule internal/modules/run_main",
    "NativeModule internal/net",
    "NativeModule internal/dns/utils",
    "NativeModule internal/modules/esm/loader",
    "NativeModule internal/process/esm_loader",
    "NativeModule internal/modules/esm/assert",
    "NativeModule internal/modules/esm/module_map",
    "NativeModule internal/modules/esm/translators",
    "NativeModule internal/modules/esm/package_config",
    "NativeModule internal/modules/esm/formats",
    "NativeModule internal/modules/esm/get_format",
    "NativeModule internal/modules/esm/resolve",
    "NativeModule internal/modules/esm/handle_process_exit",
    "NativeModule internal/modules/esm/module_job",
    "NativeModule internal/modules/esm/load",
    "NativeModule internal/fs/rimraf",
    "Internal Binding fs_dir",
    "NativeModule internal/fs/dir",
    "NativeModule string_decoder",
    "Internal Binding fs_event_wrap",
    "Internal Binding uv",
    "NativeModule internal/fs/watchers",
    "NativeModule internal/fs/recursive_watch",
    "NativeModule internal/streams/utils",
    "NativeModule internal/readline/utils",
    "NativeModule internal/readline/callbacks",
    "NativeModule internal/readline/interface",
    "NativeModule internal/fs/promises",
    "NativeModule internal/abort_controller",
    "NativeModule internal/streams/end-of-stream",
    "NativeModule internal/streams/destroy",
    "NativeModule internal/streams/legacy",
    "NativeModule internal/streams/add-abort-signal",
    "NativeModule internal/streams/buffer_list",
    "NativeModule internal/streams/state",
    "NativeModule internal/streams/from",
    "NativeModule internal/streams/readable",
    "NativeModule internal/streams/writable",
    "NativeModule internal/streams/duplex",
    "NativeModule internal/streams/pipeline",
    "NativeModule internal/streams/compose",
    "NativeModule internal/streams/operators",
    "NativeModule stream/promises",
    "NativeModule internal/streams/transform",
    "NativeModule internal/streams/passthrough",
    "NativeModule stream",
    "NativeModule internal/worker/io",
    "NativeModule internal/structured_clone",
    "NativeModule internal/perf/performance_entry",
    "NativeModule internal/perf/observe",
    "NativeModule internal/perf/resource_timing",
    "NativeModule internal/perf/nodetiming",
    "NativeModule internal/perf/usertiming",
    "NativeModule internal/perf/event_loop_utilization",
    "NativeModule internal/histogram",
    "NativeModule internal/perf/timerify",
    "NativeModule internal/perf/performance",
    "NativeModule internal/perf/event_loop_delay",
    "NativeModule perf_hooks",
    "NativeModule internal/fs/sync_write_stream",
    "Internal Binding stream_wrap",
    "Internal Binding tcp_wrap",
    "Internal Binding pipe_wrap",
    "NativeModule internal/stream_base_commons",
    "NativeModule diagnostics_channel",
    "NativeModule net",
    "Internal Binding tty_wrap",
    "NativeModule internal/tty",
    "NativeModule tty",
    "Internal Binding signal_wrap",
    "Internal Binding report",
    "NativeModule internal/process/report",
    "NativeModule internal/webstreams/writablestream",
    "NativeModule internal/webstreams/readablestream",
    "NativeModule internal/webstreams/transformstream",
    "NativeModule internal/webstreams/encoding",
    "NativeModule internal/webstreams/adapters",
    "NativeModule internal/webstreams/compression",
    "NativeModule internal/file",
    "NativeModule internal/util/colors",
    "NativeModule internal/assert/assertion_error",
    "NativeModule internal/assert/calltracker",
    "NativeModule assert",
    "NativeModule _http_agent",
    "Internal Binding http_parser",
    "NativeModule internal/freelist",
    "NativeModule _http_incoming",
    "NativeModule _http_common",
    "NativeModule internal/http",
    "NativeModule _http_outgoing",
    "NativeModule _http_client",
    "NativeModule _http_server",
    "NativeModule http",
    "NativeModule internal/error_serdes",
    "NativeModule internal/worker",
    "NativeModule worker_threads",
    "NativeModule util/types",
    "Internal Binding crypto",
    "NativeModule internal/crypto/random",
    "NativeModule internal/crypto/hashnames",
    "NativeModule internal/crypto/util",
    "NativeModule internal/crypto/pbkdf2",
    "NativeModule internal/crypto/scrypt",
    "NativeModule internal/crypto/keys",
    "NativeModule internal/crypto/hkdf",
    "NativeModule internal/crypto/keygen",
    "NativeModule internal/crypto/diffiehellman",
    "NativeModule internal/streams/lazy_transform",
    "NativeModule internal/crypto/cipher",
    "NativeModule internal/crypto/sig",
    "NativeModule internal/crypto/hash",
    "NativeModule internal/crypto/x509",
    "NativeModule internal/crypto/certificate",
    "NativeModule crypto",
    "Internal Binding zlib",
    "NativeModule zlib",
    "NativeModule stream/web",
    "NativeModule internal/deps/undici/undici"
  ],
  binding: ‹class binding {}›,
  _linkedBinding: ‹class _linkedBinding {}›,
  _events: {
    newListener: ‹class startListeningIfSignal {}›,
    removeListener: ‹class stopListeningIfSignal {}›,
    warning: ‹class onWarning {}›,
    exit: ‹class handleProcessExit {}›,
    SIGWINCH: ‹class refreshStderrOnSigWinch {}›
  },
  _eventsCount: undefined,
  _maxListeners: undefined,
  domain: null,
  _exiting: false,
  exitCode: undefined,
  config: {
    target_defaults: {
      cflags: [],
      default_configuration: "Release",
      defines: [
        "NODE_OPENSSL_CONF_NAME=nodejs_conf",
        "NODE_OPENSSL_HAS_QUIC",
        "ICU_NO_USER_DATA_OVERRIDE"
      ],
      include_dirs: [],
      libraries: []
    },
    variables: {
      asan: undefined,
      coverage: false,
      dcheck_always_on: undefined,
      debug_nghttp2: false,
      debug_node: false,
      enable_lto: false,
      enable_pgo_generate: false,
      enable_pgo_use: false,
      error_on_warn: false,
      force_dynamic_crt: undefined,
      host_arch: "x64",
      icu_data_in: "../../deps/icu-tmp/icudt73l.dat",
      icu_endianness: "l",
      icu_gyp_path: "tools/icu/icu-generic.gyp",
      icu_path: "deps/icu-small",
      icu_small: false,
      icu_ver_major: "73",
      is_debug: undefined,
      libdir: "lib",
      llvm_version: "13.0",
      napi_build_version: "9",
      node_builtin_shareable_builtins: [
        "deps/cjs-module-lexer/lexer.js",
        "deps/cjs-module-lexer/dist/lexer.js",
        "deps/undici/undici.js"
      ],
      node_byteorder: "little",
      node_debug_lib: false,
      node_enable_d8: false,
      node_enable_v8_vtunejit: false,
      node_fipsinstall: false,
      node_install_corepack: true,
      node_install_npm: true,
      node_library_files: [
        "lib/_http_agent.js",
        "lib/_http_client.js",
        "lib/_http_common.js",
        "lib/_http_incoming.js",
        "lib/_http_outgoing.js",
        "lib/_http_server.js",
        "lib/_stream_duplex.js",
        "lib/_stream_passthrough.js",
        "lib/_stream_readable.js",
        "lib/_stream_transform.js",
        "lib/_stream_wrap.js",
        "lib/_stream_writable.js",
        "lib/_tls_common.js",
        "lib/_tls_wrap.js",
        "lib/assert.js",
        "lib/assert/strict.js",
        "lib/async_hooks.js",
        "lib/buffer.js",
        "lib/child_process.js",
        "lib/cluster.js",
        "lib/console.js",
        "lib/constants.js",
        "lib/crypto.js",
        "lib/dgram.js",
        "lib/diagnostics_channel.js",
        "lib/dns.js",
        "lib/dns/promises.js",
        "lib/domain.js",
        "lib/events.js",
        "lib/fs.js",
        "lib/fs/promises.js",
        "lib/http.js",
        "lib/http2.js",
        "lib/https.js",
        "lib/inspector.js",
        "lib/inspector/promises.js",
        "lib/internal/abort_controller.js",
        "lib/internal/assert.js",
        "lib/internal/assert/assertion_error.js",
        "lib/internal/assert/calltracker.js",
        "lib/internal/async_hooks.js",
        "lib/internal/blob.js",
        "lib/internal/blocklist.js",
        "lib/internal/bootstrap/node.js",
        "lib/internal/bootstrap/realm.js",
        "lib/internal/bootstrap/switches/does_not_own_process_state.js",
        "lib/internal/bootstrap/switches/does_own_process_state.js",
        "lib/internal/bootstrap/switches/is_main_thread.js",
        "lib/internal/bootstrap/switches/is_not_main_thread.js",
        "lib/internal/bootstrap/web/exposed-wildcard.js",
        "lib/internal/bootstrap/web/exposed-window-or-worker.js",
        "lib/internal/buffer.js",
        "lib/internal/child_process.js",
        "lib/internal/child_process/serialization.js",
        "lib/internal/cli_table.js",
        "lib/internal/cluster/child.js",
        "lib/internal/cluster/primary.js",
        "lib/internal/cluster/round_robin_handle.js",
        "lib/internal/cluster/shared_handle.js",
        "lib/internal/cluster/utils.js",
        "lib/internal/cluster/worker.js",
        "lib/internal/console/constructor.js",
        "lib/internal/console/global.js",
        "lib/internal/constants.js",
        "lib/internal/crypto/aes.js",
        "lib/internal/crypto/certificate.js",
        "lib/internal/crypto/cfrg.js",
        "lib/internal/crypto/cipher.js",
        "lib/internal/crypto/diffiehellman.js",
        "lib/internal/crypto/ec.js",
        "lib/internal/crypto/hash.js",
        "lib/internal/crypto/hashnames.js",
        "lib/internal/crypto/hkdf.js",
        "lib/internal/crypto/keygen.js",
        "lib/internal/crypto/keys.js",
        "lib/internal/crypto/mac.js",
        "lib/internal/crypto/pbkdf2.js",
        "lib/internal/crypto/random.js",
        "lib/internal/crypto/rsa.js",
        "lib/internal/crypto/scrypt.js",
        "lib/internal/crypto/sig.js",
        "lib/internal/crypto/util.js",
        "lib/internal/crypto/webcrypto.js",
        "lib/internal/crypto/webidl.js",
        "lib/internal/crypto/x509.js",
        "lib/internal/debugger/inspect.js",
        "lib/internal/debugger/inspect_client.js",
        "lib/internal/debugger/inspect_repl.js",
        "lib/internal/dgram.js",
        "lib/internal/dns/callback_resolver.js",
        "lib/internal/dns/promises.js",
        "lib/internal/dns/utils.js",
        "lib/internal/encoding.js",
        "lib/internal/error_serdes.js",
        "lib/internal/errors.js",
        "lib/internal/event_target.js",
        "lib/internal/events/symbols.js",
        "lib/internal/file.js",
        "lib/internal/fixed_queue.js",
        "lib/internal/freelist.js",
        "lib/internal/freeze_intrinsics.js",
        "lib/internal/fs/cp/cp-sync.js",
        "lib/internal/fs/cp/cp.js",
        "lib/internal/fs/dir.js",
        "lib/internal/fs/promises.js",
        "lib/internal/fs/read/context.js",
        "lib/internal/fs/read/utf8.js",
        "lib/internal/fs/recursive_watch.js",
        "lib/internal/fs/rimraf.js",
        "lib/internal/fs/streams.js",
        "lib/internal/fs/sync_write_stream.js",
        "lib/internal/fs/utils.js",
        "lib/internal/fs/watchers.js",
        "lib/internal/heap_utils.js",
        "lib/internal/histogram.js",
        "lib/internal/http.js",
        "lib/internal/http2/compat.js",
        "lib/internal/http2/core.js",
        "lib/internal/http2/util.js",
        "lib/internal/idna.js",
        "lib/internal/inspector_async_hook.js",
        "lib/internal/js_stream_socket.js",
        "lib/internal/legacy/processbinding.js",
        "lib/internal/linkedlist.js",
        "lib/internal/main/check_syntax.js",
        "lib/internal/main/embedding.js",
        "lib/internal/main/eval_stdin.js",
        "lib/internal/main/eval_string.js",
        "lib/internal/main/inspect.js",
        "lib/internal/main/mksnapshot.js",
        "lib/internal/main/print_help.js",
        "lib/internal/main/prof_process.js",
        "lib/internal/main/repl.js",
        "lib/internal/main/run_main_module.js",
        "lib/internal/main/test_runner.js",
        "lib/internal/main/watch_mode.js",
        "lib/internal/main/worker_thread.js",
        "lib/internal/mime.js",
        "lib/internal/modules/cjs/loader.js",
        "lib/internal/modules/esm/assert.js",
        "lib/internal/modules/esm/create_dynamic_module.js",
        "lib/internal/modules/esm/fetch_module.js",
        "lib/internal/modules/esm/formats.js",
        "lib/internal/modules/esm/get_format.js",
        "lib/internal/modules/esm/handle_process_exit.js",
        "lib/internal/modules/esm/hooks.js",
        "lib/internal/modules/esm/initialize_import_meta.js",
        "lib/internal/modules/esm/load.js",
        "lib/internal/modules/esm/loader.js",
        "lib/internal/modules/esm/module_job.js",
        "lib/internal/modules/esm/module_map.js",
        "lib/internal/modules/esm/package_config.js",
        "lib/internal/modules/esm/resolve.js",
        "lib/internal/modules/esm/shared_constants.js",
        "lib/internal/modules/esm/translators.js",
        "lib/internal/modules/esm/utils.js",
        "lib/internal/modules/esm/worker.js",
        "lib/internal/modules/helpers.js",
        "lib/internal/modules/package_json_reader.js",
        "lib/internal/modules/run_main.js",
        "lib/internal/net.js",
        "lib/internal/options.js",
        "lib/internal/per_context/domexception.js",
        "lib/internal/per_context/messageport.js",
        "lib/internal/per_context/primordials.js",
        "lib/internal/perf/event_loop_delay.js",
        "lib/internal/perf/event_loop_utilization.js",
        "lib/internal/perf/nodetiming.js",
        "lib/internal/perf/observe.js",
        "lib/internal/perf/performance.js",
        "lib/internal/perf/performance_entry.js",
        "lib/internal/perf/resource_timing.js",
        "lib/internal/perf/timerify.js",
        "lib/internal/perf/usertiming.js",
        "lib/internal/perf/utils.js",
        "lib/internal/policy/manifest.js",
        "lib/internal/policy/sri.js",
        "lib/internal/priority_queue.js",
        "lib/internal/process/esm_loader.js",
        "lib/internal/process/execution.js",
        "lib/internal/process/per_thread.js",
        "lib/internal/process/permission.js",
        "lib/internal/process/policy.js",
        "lib/internal/process/pre_execution.js",
        "lib/internal/process/promises.js",
        "lib/internal/process/report.js",
        "lib/internal/process/signal.js",
        "lib/internal/process/task_queues.js",
        "lib/internal/process/warning.js",
        "lib/internal/process/worker_thread_only.js",
        "lib/internal/promise_hooks.js",
        "lib/internal/querystring.js",
        "lib/internal/readline/callbacks.js",
        "lib/internal/readline/emitKeypressEvents.js",
        "lib/internal/readline/interface.js",
        "lib/internal/readline/promises.js",
        "lib/internal/readline/utils.js",
        "lib/internal/repl.js",
        "lib/internal/repl/await.js",
        "lib/internal/repl/history.js",
        "lib/internal/repl/utils.js",
        "lib/internal/socket_list.js",
        "lib/internal/socketaddress.js",
        "lib/internal/source_map/prepare_stack_trace.js",
        "lib/internal/source_map/source_map.js",
        "lib/internal/source_map/source_map_cache.js",
        "lib/internal/stream_base_commons.js",
        "lib/internal/streams/add-abort-signal.js",
        "lib/internal/streams/buffer_list.js",
        "lib/internal/streams/compose.js",
        "lib/internal/streams/destroy.js",
        "lib/internal/streams/duplex.js",
        "lib/internal/streams/duplexify.js",
        "lib/internal/streams/end-of-stream.js",
        "lib/internal/streams/from.js",
        "lib/internal/streams/lazy_transform.js",
        "lib/internal/streams/legacy.js",
        "lib/internal/streams/operators.js",
        "lib/internal/streams/passthrough.js",
        "lib/internal/streams/pipeline.js",
        "lib/internal/streams/readable.js",
        "lib/internal/streams/state.js",
        "lib/internal/streams/transform.js",
        "lib/internal/streams/utils.js",
        "lib/internal/streams/writable.js",
        "lib/internal/structured_clone.js",
        "lib/internal/test/binding.js",
        "lib/internal/test/transfer.js",
        "lib/internal/test_runner/coverage.js",
        "lib/internal/test_runner/harness.js",
        "lib/internal/test_runner/mock/mock.js",
        "lib/internal/test_runner/mock/mock_timers.js",
        "lib/internal/test_runner/reporter/dot.js",
        "lib/internal/test_runner/reporter/spec.js",
        "lib/internal/test_runner/reporter/tap.js",
        "lib/internal/test_runner/reporter/v8-serializer.js",
        "lib/internal/test_runner/runner.js",
        "lib/internal/test_runner/test.js",
        "lib/internal/test_runner/tests_stream.js",
        "lib/internal/test_runner/utils.js",
        "lib/internal/timers.js",
        "lib/internal/tls/secure-context.js",
        "lib/internal/tls/secure-pair.js",
        "lib/internal/trace_events_async_hooks.js",
        "lib/internal/tty.js",
        "lib/internal/url.js",
        "lib/internal/util.js",
        "lib/internal/util/colors.js",
        "lib/internal/util/comparisons.js",
        "lib/internal/util/debuglog.js",
        "lib/internal/util/embedding.js",
        "lib/internal/util/inspect.js",
        "lib/internal/util/inspector.js",
        "lib/internal/util/iterable_weak_map.js",
        "lib/internal/util/parse_args/parse_args.js",
        "lib/internal/util/parse_args/utils.js",
        "lib/internal/util/types.js",
        "lib/internal/v8/startup_snapshot.js",
        "lib/internal/v8_prof_polyfill.js",
        "lib/internal/v8_prof_processor.js",
        "lib/internal/validators.js",
        "lib/internal/vm.js",
        "lib/internal/vm/module.js",
        "lib/internal/wasm_web_api.js",
        "lib/internal/watch_mode/files_watcher.js",
        "lib/internal/watchdog.js",
        "lib/internal/webidl.js",
        "lib/internal/webstreams/adapters.js",
        "lib/internal/webstreams/compression.js",
        "lib/internal/webstreams/encoding.js",
        "lib/internal/webstreams/queuingstrategies.js",
        "lib/internal/webstreams/readablestream.js",
        "lib/internal/webstreams/transfer.js",
        "lib/internal/webstreams/transformstream.js",
        "lib/internal/webstreams/util.js",
        "lib/internal/webstreams/writablestream.js",
        "lib/internal/worker.js",
        "lib/internal/worker/io.js",
        "lib/internal/worker/js_transferable.js",
        "lib/module.js",
        "lib/net.js",
        "lib/os.js",
        "lib/path.js",
        "lib/path/posix.js",
        "lib/path/win32.js",
        "lib/perf_hooks.js",
        "lib/process.js",
        "lib/punycode.js",
        "lib/querystring.js",
        "lib/readline.js",
        "lib/readline/promises.js",
        "lib/repl.js",
        "lib/stream.js",
        "lib/stream/consumers.js",
        "lib/stream/promises.js",
        "lib/stream/web.js",
        "lib/string_decoder.js",
        "lib/sys.js",
        "lib/test.js",
        "lib/test/reporters.js",
        "lib/timers.js",
        "lib/timers/promises.js",
        "lib/tls.js",
        "lib/trace_events.js",
        "lib/tty.js",
        "lib/url.js",
        "lib/util.js",
        "lib/util/types.js",
        "lib/v8.js",
        "lib/vm.js",
        "lib/wasi.js",
        "lib/worker_threads.js",
        "lib/zlib.js"
      ],
      node_module_version: undefined,
      node_no_browser_globals: false,
      node_prefix: "/",
      node_release_urlbase: "https://nodejs.org/download/release/",
      node_shared: false,
      node_shared_brotli: false,
      node_shared_cares: false,
      node_shared_http_parser: false,
      node_shared_libuv: false,
      node_shared_nghttp2: false,
      node_shared_nghttp3: false,
      node_shared_ngtcp2: false,
      node_shared_openssl: false,
      node_shared_zlib: false,
      node_tag: "",
      node_target_type: "executable",
      node_use_bundled_v8: true,
      node_use_node_code_cache: true,
      node_use_node_snapshot: true,
      node_use_openssl: true,
      node_use_v8_platform: true,
      node_with_ltcg: false,
      node_without_node_options: false,
      openssl_is_fips: false,
      openssl_quic: true,
      ossfuzz: false,
      shlib_suffix: "115.dylib",
      single_executable_application: true,
      target_arch: "x64",
      v8_enable_31bit_smis_on_64bit_arch: undefined,
      v8_enable_gdbjit: undefined,
      v8_enable_hugepage: undefined,
      v8_enable_i18n_support: undefined,
      v8_enable_inspector: undefined,
      v8_enable_javascript_promise_hooks: undefined,
      v8_enable_lite_mode: undefined,
      v8_enable_object_print: undefined,
      v8_enable_pointer_compression: undefined,
      v8_enable_shared_ro_heap: undefined,
      v8_enable_short_builtin_calls: undefined,
      v8_enable_webassembly: undefined,
      v8_no_strict_aliasing: undefined,
      v8_optimized_debug: undefined,
      v8_promise_internal_field_count: undefined,
      v8_random_seed: undefined,
      v8_trace_maps: undefined,
      v8_use_siphash: undefined,
      want_separate_host_toolset: undefined,
      xcode_version: "13.0"
    }
  },
  dlopen: ‹ƒ () { [native code] }›,
  uptime: ‹ƒ () { [native code] }›,
  _getActiveRequests: ‹ƒ () { [native code] }›,
  _getActiveHandles: ‹ƒ () { [native code] }›,
  getActiveResourcesInfo: ‹ƒ () { [native code] }›,
  reallyExit: ‹ƒ () { [native code] }›,
  _kill: ‹ƒ () { [native code] }›,
  cpuUsage: ‹class cpuUsage {}›,
  resourceUsage: ‹class resourceUsage {}›,
  memoryUsage: ‹class memoryUsage {}›,
  constrainedMemory: ‹ƒ () { [native code] }›,
  kill: ‹class kill {}›,
  exit: ‹class exit {}›,
  hrtime: ‹class hrtime {}›,
  openStdin: ‹class openStdin {}›,
  getuid: ‹ƒ () { [native code] }›,
  geteuid: ‹ƒ () { [native code] }›,
  getgid: ‹ƒ () { [native code] }›,
  getegid: ‹ƒ () { [native code] }›,
  getgroups: ‹ƒ () { [native code] }›,
  allowedNodeEnvironmentFlags: {},
  assert: ‹class deprecated {}›,
  features: {
    inspector: true,
    debug: false,
    uv: true,
    ipv6: true,
    tls_alpn: true,
    tls_sni: true,
    tls_ocsp: true,
    tls: true,
    cached_builtins: true
  },
  _fatalException: ‹ƒ (er, fromPromise) => { // It's possible that defaultTriggerAsyncId was set for a constructor // call that threw and was never cleared. So clear it now. clearDefaultTriggerAsyncId(); const type = fromPromise ? 'unhandledRejection' : 'uncaughtException'; process.emit('uncaughtExceptionMonitor', er, type); if (exceptionHandlerState.captureFn !== null) { exceptionHandlerState.captureFn(er); } else if (!process.emit('uncaughtException', er, type)) { // If someone handled it, then great. Otherwise, die in C++ land // since that means that we'll exit the process, emit the 'exit' event. try { if (!process._exiting) { process._exiting = true; process.exitCode = kGenericUserError; process.emit('exit', kGenericUserError); } } catch { // Nothing to be done about it at this point. } return false; } // If we handled an error, then make sure any ticks get processed // by ensuring that the next Immediate cycle isn't empty. require('timers').setImmediate(noop); // Emit the after() hooks now that the exception has been handled. if (afterHooksExist()) { do { const asyncId = executionAsyncId(); if (asyncId === 0) popAsyncContext(0); else emitAfter(asyncId); } while (hasAsyncIdStack()); } // And completely empty the id stack, including anything that may be // cached on the native side. clearAsyncIdStack(); return true; }›,
  setUncaughtExceptionCaptureCallback: ‹class setUncaughtExceptionCaptureCallback {}›,
  hasUncaughtExceptionCaptureCallback: ‹class hasUncaughtExceptionCaptureCallback {}›,
  emitWarning: ‹class emitWarning {}›,
  nextTick: ‹class nextTick {}›,
  _tickCallback: ‹class runNextTicks {}›,
  setSourceMapsEnabled: ‹class setSourceMapsEnabled {}›,
  _debugProcess: ‹ƒ () { [native code] }›,
  _debugEnd: ‹ƒ () { [native code] }›,
  _startProfilerIdleNotifier: ‹ƒ () => {}›,
  _stopProfilerIdleNotifier: ‹ƒ () => {}›,
  stdin: {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: {
      objectMode: false,
      highWaterMark: undefined,
      buffer: {
        head: null,
        tail: null,
        length: undefined
      },
      length: undefined,
      pipes: [],
      flowing: null,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: "utf8",
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null
    },
    _events: {
      pause: ‹ƒ () => { process.nextTick(onpause); }›
    },
    _eventsCount: undefined,
    _maxListeners: undefined,
    _writableState: {
      objectMode: false,
      highWaterMark: undefined,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: "utf8",
      length: undefined,
      writing: false,
      corked: undefined,
      sync: true,
      bufferProcessing: false,
      onwrite: ‹ƒ () { [native code] }›,
      writecb: null,
      writelen: undefined,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: undefined,
      allBuffers: true,
      allNoop: true,
      pendingcb: undefined,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: "",
    server: null,
    _server: null,
    isRaw: false,
    isTTY: true,
    fd: undefined
  },
  abort: ‹ƒ () { [native code] }›,
  umask: ‹class wrappedUmask {}›,
  chdir: ‹class chdir {}›,
  cwd: ‹class wrappedCwd {}›,
  initgroups: ‹class initgroups {}›,
  setgroups: ‹class setgroups {}›,
  setegid: ‹class setegid {}›,
  seteuid: ‹class seteuid {}›,
  setgid: ‹class setgid {}›,
  setuid: ‹class setuid {}›,
  env: {
    GREP_COLOR: "37;45",
    CPLUS_INCLUDE_PATH: "/Users/daflair/.wasmedge/include",
    npm_package_scripts_emsdk_update: "export EMSDK=${EMSDK_DIR:-$PWD/upstream/@emscripten-core/emsdk} && (cd $EMSDK && ./emsdk install latest && ./emsdk activate latest);",
    npm_package_scripts_upstream_list: "git submodule foreach -q 'echo $name: $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)';",
    WASMER_CACHE_DIR: "/Users/daflair/.wasmer/cache",
    LESS_TERMCAP_mb: "[01;31m",
    TERM_PROGRAM: "vscode",
    NODE: "/usr/local/bin/node",
    LESS_TERMCAP_md: "[01;31m",
    INIT_CWD: "/Users/daflair/Projects/Agoric/xs-wasm",
    WASMER_DIR: "/Users/daflair/.wasmer",
    LESS_TERMCAP_me: "[0m",
    npm_config_version_git_tag: "true",
    TERM: "xterm-256color",
    SHELL: "/bin/zsh",
    TMPDIR: "/var/folders/4k/yply4l3j44gbj0cpj3w0s0800000gp/T/",
    LIBRARY_PATH: "/Users/daflair/.wasmedge/lib",
    npm_config_init_license: "MIT",
    npm_config_email: "saleh@smotaal.io",
    TERM_PROGRAM_VERSION: "1.84.2",
    ZDOTDIR: "/Users/daflair",
    ORIGINAL_XDG_CURRENT_DESKTOP: "undefined",
    MallocNanoZone: "0",
    npm_config_init_author_email: "saleh@smotaal.io",
    LESS_TERMCAP_ue: "[0m",
    npm_config_registry: "https://registry.yarnpkg.com",
    npm_package_readmeFilename: "README.md",
    USER: "daflair",
    npm_package_description: "Proof-of-concept port of Moddable's `xs` engine to WebAssembly using `emscripten`.",
    npm_package_scripts_patch_apply: "TREE=${TREE:-INIT_CWD#$PWD/upstream/}; PATCH=$PWD/patches/$TREE.patch; (cd upstream/$TREE && git apply $PATCH);",
    LS_COLORS: "di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:",
    npm_package_license: "UNLICENSED",
    GREP_COLORS: "mt=37;45",
    COMMAND_MODE: "unix2003",
    npm_package_devDependencies__types_emscripten: "latest",
    npm_package_scripts_debug_global_this_node: "MODULE=modules/debug/global-this.js; (cd demo && ([ ! -e $MODULE.node.log ] || rm -f $MODULE.node.log) && node --no-experimental-global-webcrypto $MODULE > $MODULE.node.log)",
    npm_config_always_auth: "true",
    SSH_AUTH_SOCK: "/private/tmp/com.apple.launchd.upElRfw2au/Listeners",
    __CF_USER_TEXT_ENCODING: "0x1F6:0x0:0x52",
    npm_execpath: "/Users/daflair/.yarn/bin/yarn.js",
    PAGER: "less",
    LSCOLORS: "exfxcxdxbxGxDxabagacad",
    LESS_TERMCAP_us: "[01;32m",
    PATH: "/var/folders/4k/yply4l3j44gbj0cpj3w0s0800000gp/T/yarn--1699989125577-0.042212779666699785:/Users/daflair/Projects/Agoric/xs-wasm/node_modules/.bin:/Users/daflair/.config/yarn/link/node_modules/.bin:/Users/daflair/.npm/node_modules/bin:/usr/local/libexec/lib/node_modules/npm/bin/node-gyp-bin:/usr/local/lib/node_modules/npm/bin/node-gyp-bin:/usr/local/bin/node_modules/npm/bin/node-gyp-bin:../.bin:/Users/daflair/.wasienv/bin:/Users/daflair/.wasmer/bin:/Users/daflair/.wasmer/globals/wapm_packages/.bin:/usr/local/opt/ccache/libexec:/Users/daflair/.yarn/bin:/Users/daflair/.config/yarn/global/node_modules/.bin:/usr/local/bin:/usr/local/sbin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Xamarin Workbooks.app/Contents/SharedSupport/path-bin:../.bin:/Users/daflair/.wasienv/bin:/Users/daflair/.wasmer/bin:/Users/daflair/.wasmer/globals/wapm_packages/.bin:/usr/local/opt/ccache/libexec:/Users/daflair/.yarn/bin:/Users/daflair/.config/yarn/global/node_modules/.bin:/Users/daflair/.wasmedge/bin",
    npm_config_argv: "{"remain":[],"cooked":["run","debug:global-this:node"],"original":["debug:global-this:node"]}",
    npm_config_workspaces_experimental: "true",
    _: "/var/folders/4k/yply4l3j44gbj0cpj3w0s0800000gp/T/yarn--1699989125577-0.042212779666699785/node",
    WASMEDGE_LIB_DIR: "/Users/daflair/.wasmedge/lib",
    npm_package_scripts_debug_global_this_xsnap: "MODULE=modules/debug/global-this.js; (cd demo && ([ ! -e $MODULE.xsnap.log ] || rm -f $MODULE.xsnap.log) && node xsnap.js -m $MODULE > $MODULE.xsnap.log)",
    USER_ZDOTDIR: "/Users/daflair",
    C_INCLUDE_PATH: "/Users/daflair/.wasmedge/include",
    __CFBundleIdentifier: "com.microsoft.VSCode",
    npm_package_scripts_patch_save: "TREE=${TREE:-INIT_CWD#$PWD/upstream/}; STAMP=$(date +%Y-%m-%d.%H.%M.%S); PATCH=$PWD/patches/$TREE.$STAMP.patch; LINK=$PWD/patches/$TREE.patch; (cd upstream/$TREE && ([ ! -e $PATCH ] || rm -i $PATCH) && mkdir -p $(dirname $PATCH) && git diff --ignore-all-space > $PATCH; ln -sf $PATCH $LINK;);",
    PWD: "/Users/daflair/Projects/Agoric/xs-wasm/demo",
    EDITOR: "nano",
    npm_lifecycle_event: "debug:global-this:node",
    npm_package_scripts_upstream_update: "git submodule update --init && git submodule foreach -q 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)';",
    LANG: "en_US.UTF-8",
    npm_package_name: "@smotaal/xs-wasm",
    npm_config_init_scope: "@smotaal",
    npm_package_scripts_start: "node demo/xsnap.js",
    npm_package_scripts_build: "$npm_execpath run make:emscripten",
    npm_config_version_commit_hooks: "true",
    VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node",
    XPC_FLAGS: "0x0",
    npm_config_username: "smotaal",
    npm_config_bin_links: "true",
    npm_package_scripts_make_emscripten: "export EMSDK=${EMSDK_DIR:-$PWD/upstream/@emscripten-core/emsdk} && (cd makefiles/wasm && $EMSDK/upstream/emscripten/emmake make -j$(nproc) -f xsnap-emscripten.mk);",
    XPC_SERVICE_NAME: "0",
    npm_package_version: "0.0.3",
    VSCODE_INJECTION: "1",
    SHLVL: "2",
    HOME: "/Users/daflair",
    npm_package_type: "module",
    VSCODE_GIT_ASKPASS_MAIN: "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",
    npm_package_dependencies_wabt: "^1.0.32",
    npm_config_save_prefix: "^",
    npm_config_strict_ssl: "true",
    npm_config_version_git_message: "v%s",
    WASIENV_DIR: "/Users/daflair/.wasienv",
    npm_package_authors_0: "SMotaal <saleh@smotaal.io>",
    LESS: "-F -g -i -M -R -S -w -X -z-4",
    LOGNAME: "daflair",
    YARN_WRAP_OUTPUT: "false",
    npm_package_authors_1: "Michael FIG <michael+github@fig.org>",
    VISUAL: "nano",
    npm_lifecycle_script: "MODULE=modules/debug/global-this.js; (cd demo && ([ ! -e $MODULE.node.log ] || rm -f $MODULE.node.log) && node --no-experimental-global-webcrypto $MODULE > $MODULE.node.log)",
    VSCODE_GIT_IPC_HANDLE: "/var/folders/4k/yply4l3j44gbj0cpj3w0s0800000gp/T/vscode-git-fc58d10685.sock",
    LESS_TERMCAP_so: "[00;47;30m",
    BROWSER: "open",
    npm_config_version_git_sign: "",
    npm_config_ignore_scripts: "",
    npm_config_user_agent: "yarn/1.22.19 npm/? node/v20.6.1 darwin x64",
    VSCODE_GIT_ASKPASS_NODE: "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",
    GIT_ASKPASS: "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",
    npm_config_init_version: "0.0.1",
    npm_config_ignore_optional: "",
    npm_config_init_author_name: "Saleh Abdel Motaal",
    COLORTERM: "truecolor",
    LESS_TERMCAP_se: "[0m",
    npm_node_execpath: "/usr/local/bin/node",
    npm_config_version_tag_prefix: "v",
    npm_config_prefix: "/Users/daflair/.npm/node_modules"
  },
  title: "/usr/local/bin/node",
  argv: [
    "/usr/local/bin/node",
    "/Users/daflair/Projects/Agoric/xs-wasm/demo/modules/debug/global-this.js"
  ],
  execArgv: [
    "--no-experimental-global-webcrypto"
  ],
  pid: undefined,
  ppid: undefined,
  execPath: "/usr/local/bin/node",
  debugPort: undefined,
  argv0: "/usr/local/bin/node",
  _preload_modules: [],
  report: {
    writeReport: ‹ƒ (file, err) { if (typeof file === 'object' && file !== null) { err = file; file = undefined; } else if (file !== undefined) { validateString(file, 'file'); file = getValidatedPath(file); } if (err === undefined) { err = new ERR_SYNTHETIC(); } else { validateObject(err, 'err'); } return nr.writeReport('JavaScript API', 'API', file, err); }›,
    getReport: ‹ƒ (err) { if (err === undefined) err = new ERR_SYNTHETIC(); else validateObject(err, 'err'); return JSONParse(nr.getReport(err)); }›,
    directory: "",
    filename: "",
    compact: false,
    signal: "SIGUSR2",
    reportOnFatalError: false,
    reportOnSignal: false,
    reportOnUncaughtException: false
  }
},
Buffer: ‹class Buffer extends Uint8Array {}›,
clearImmediate: ‹class clearImmediate {}›,
setImmediate: ‹class setImmediate {}›,
URL: ‹class URL {}›,
URLSearchParams: ‹class URLSearchParams {}›,
DOMException: ‹class DOMException extends Error {}›,
AbortController: ‹class AbortController {}›,
AbortSignal: ‹class AbortSignal extends EventTarget {}›,
Event: ‹class Event {}›,
EventTarget: ‹class EventTarget {}›,
TextEncoder: ‹class TextEncoder {}›,
TextDecoder: ‹class TextDecoder {}›,
TransformStream: ‹class TransformStream {}›,
TransformStreamDefaultController: ‹class TransformStreamDefaultController {}›,
WritableStream: ‹class WritableStream {}›,
WritableStreamDefaultController: ‹class WritableStreamDefaultController {}›,
WritableStreamDefaultWriter: ‹class WritableStreamDefaultWriter {}›,
ReadableStream: ‹class ReadableStream {}›,
ReadableStreamDefaultReader: ‹class ReadableStreamDefaultReader {}›,
ReadableStreamBYOBReader: ‹class ReadableStreamBYOBReader {}›,
ReadableStreamBYOBRequest: ‹class ReadableStreamBYOBRequest {}›,
ReadableByteStreamController: ‹class ReadableByteStreamController {}›,
ReadableStreamDefaultController: ‹class ReadableStreamDefaultController {}›,
ByteLengthQueuingStrategy: ‹class ByteLengthQueuingStrategy {}›,
CountQueuingStrategy: ‹class CountQueuingStrategy {}›,
TextEncoderStream: ‹class TextEncoderStream {}›,
TextDecoderStream: ‹class TextDecoderStream {}›,
CompressionStream: ‹class CompressionStream {}›,
DecompressionStream: ‹class DecompressionStream {}›,
clearInterval: ‹class clearInterval {}›,
clearTimeout: ‹class clearTimeout {}›,
setInterval: ‹class setInterval {}›,
setTimeout: ‹class setTimeout {}›,
queueMicrotask: ‹class queueMicrotask {}›,
structuredClone: ‹class structuredClone {}›,
atob: ‹class atob {}›,
btoa: ‹class btoa {}›,
BroadcastChannel: ‹class BroadcastChannel extends EventTarget {}›,
MessageChannel: ‹class MessageChannel {}›,
MessagePort: ‹class MessagePort extends NodeEventTarget {}›,
MessageEvent: ‹class MessageEvent extends Event {}›,
Blob: ‹class Blob {}›,
File: ‹class File extends Blob {}›,
Performance: ‹class Performance extends EventTarget {}›,
PerformanceEntry: ‹class PerformanceEntry {}›,
PerformanceMark: ‹class PerformanceMark extends PerformanceEntry {}›,
PerformanceMeasure: ‹class PerformanceMeasure extends PerformanceEntry {}›,
PerformanceObserver: ‹class PerformanceObserver {}›,
PerformanceObserverEntryList: ‹class PerformanceObserverEntryList {}›,
PerformanceResourceTiming: ‹class PerformanceResourceTiming extends PerformanceEntry {}›,
performance: {
  nodeTiming: {
    name: "node",
    entryType: "node",
    startTime: undefined,
    duration: undefined,
    nodeStart: undefined,
    v8Start: undefined,
    bootstrapComplete: undefined,
    environment: undefined,
    loopStart: undefined,
    loopExit: undefined,
    idleTime: undefined
  },
  timeOrigin: undefined,
  eventLoopUtilization: {
    idle: undefined,
    active: undefined,
    utilization: undefined
  }
},
SharedArrayBuffer: ‹class SharedArrayBuffer {}›,
Atomics: {
  load: ‹ƒ () { [native code] }›,
  store: ‹ƒ () { [native code] }›,
  add: ‹ƒ () { [native code] }›,
  sub: ‹ƒ () { [native code] }›,
  and: ‹ƒ () { [native code] }›,
  or: ‹ƒ () { [native code] }›,
  xor: ‹ƒ () { [native code] }›,
  exchange: ‹ƒ () { [native code] }›,
  compareExchange: ‹ƒ () { [native code] }›,
  isLockFree: ‹ƒ () { [native code] }›,
  wait: ‹ƒ () { [native code] }›,
  waitAsync: ‹ƒ () { [native code] }›,
  notify: ‹ƒ () { [native code] }›
},
WebAssembly: {
  compile: ‹ƒ () { [native code] }›,
  validate: ‹ƒ () { [native code] }›,
  instantiate: ‹ƒ () { [native code] }›,
  compileStreaming: ‹ƒ () { [native code] }›,
  instantiateStreaming: ‹ƒ () { [native code] }›,
  Module: ‹class Module {}›,
  Instance: ‹class Instance {}›,
  Table: ‹class Table {}›,
  Memory: ‹class Memory {}›,
  Global: ‹class Global {}›,
  Tag: ‹class Tag {}›,
  Exception: ‹class Exception {}›,
  CompileError: ‹class CompileError extends Error {}›,
  LinkError: ‹class LinkError extends Error {}›,
  RuntimeError: ‹class RuntimeError extends Error {}›
},
fetch: ‹async ƒ (input, init = undefined) { return lazyUndici().fetch(input, init); }›,
FormData: ‹class FormData {}›,
Headers: ‹class Headers {}›,
Request: ‹class Request {}›,
Response: ‹class Response {}›,
CustomEvent: ‹class CustomEvent extends Event {}›

